(()=>{"use strict";const e=class{constructor(){this.head=null}},t=class{constructor(e){this.value=e,this.next=null}};console.log(1);const r=new class{constructor(){this.size=47,this.map=new Array(this.size);for(let t=0;t<this.size;t++)this.map[t]=new e;this.loadFactor=.75}hash(e){let t=0;for(let r=0;r<e.length;r++)t=31*t+e.charCodeAt(r);return t%=this.size,t}set(e,r){if("string"!=typeof e)throw new Error("Key is not a string.");let n=this.map[this.hash(e)],a=new t([e,r]);if(n.head){let t=n.head;if(t.value[0]===e)return void(t.value[1]=r);for(;t.next;)if(t=t.next,t.value[0]===e)return void(t.value[1]=r);t.next=a}else n.head=a}get(e){if("string"!=typeof e)throw new Error("Key is not a string.");let t=this.map[this.hash(e)];if(!t.head)return null;let r=t.head;if(r.value[0]===e)return r.value[1];for(;r.next;)if(r=r.next,r.value[0]===e)return r.value[1];return null}has(e){if("string"!=typeof e)throw new Error("Key is not a string.");let t=this.map[this.hash(e)];if(!t.head)return!1;let r=t.head;if(r.value[0]===e)return!0;for(;r.next;)if(r=r.next,r.value[0]===e)return!0;return!1}remove(e){if("string"!=typeof e)throw new Error("Key is not a string.");let t=this.map[this.hash(e)];if(!t.head)return!1;let r=t.head,n=null;if(r.value[0]===e)return t.head=r.next,!0;for(;r.next;)if(n=r,r=r.next,r.value[0]===e)return n.next=r.next,!0;return!1}};r.set("apple",1),r.set("banana",2),r.set("orange",3),console.log(r.has("banana")),r.remove("banana"),console.log(r.has("banana"))})();